//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;
import "google/protobuf/timestamp.proto";


//----------------------------------------------------------------------------------------------------------------------

// Eye Operations

//----------------------------------------------------------------------------------------------------------------------


// CamJoin Request
message CamJoinRequest {
    string local = 1;
    string latitude = 2;
    string longitude = 3;
}

message CamJoinResponse {}

//CamInfo Request
message CamInfoRequest {
    string local = 1;
}

message CamInfoResponse {
    float latitude = 1;
    float longitude = 2;
}

message ReportLot{
    repeated ReportRequest reportLot = 1;
}

//Report Request
message ReportRequest {
    ObjectType type = 1;
    string id = 2;
    string camName = 3;
}

message ReportResponse {}


//----------------------------------------------------------------------------------------------------------------------

//

//----------------------------------------------------------------------------------------------------------------------


enum ObjectType {
    person = 0;
    car = 1;
}

message Camera{
    string name = 1;
    float latitude = 2;
    float longitude = 3;
}

message Observation {
    ObjectType type = 1;
    string id = 2;
    Camera cam = 3;
    //google.protobuf.Timestamp timestamp = 4;
    string timestamp = 4;
}

//----------------------------------------------------------------------------------------------------------------------

// Spotter Operations

//----------------------------------------------------------------------------------------------------------------------
message qPrev{
    repeated int64 ts = 1;
}

message TrackResponse{
    Observation obsRes = 1;
}

message TrackMatchResponse{
    repeated Observation obsRes = 1;
}
message TraceResponse{
    repeated Observation obsRes = 1;
}


message TrackRequest {
    ObjectType type = 1;
    string id = 2;
    //qPrev qPrev = 3;
}
message TrackMatchRequest {
    ObjectType type = 1;
    string id = 2;
    //qPrev qPrev = 3;
}
message TraceRequest {
    ObjectType type = 1;
    string id = 2;
    //qPrev qPrev = 3;
}

//----------------------------------------------------------------------------------------------------------------------

// Ctrl Operations

//----------------------------------------------------------------------------------------------------------------------

message InitRequest {
    //empty
}

message InitResponse {
    //empty
}


message PingRequest {
    string ping = 1;
}

message PongResponse {
    string pong = 1;
}


message ClearRequest {
    //empty
}

message ClearResponse {
    //empty
}

//----------------------------------------------------------------------------------------------------------------------

// Gossip Protocol

//----------------------------------------------------------------------------------------------------------------------

message replicaTS{
    repeated int64 ts = 1;
}

message ObservationLog{
    ObjectType type = 1;
    string id = 2;
    string cam = 3;
    string timestamp = 4;
}


message updateLog{
    repeated Camera camLog = 1;
    repeated ObservationLog reportLog = 2;
}

message GossipMessage{
    repeated int32 ts = 1;
    updateLog log = 2;
}

message GossipResponse{
    //empty
}


service Silo{

    rpc CamJoin(CamJoinRequest) returns (CamJoinResponse);
    rpc CamInfo(CamInfoRequest) returns (CamInfoResponse);

    rpc Report(ReportLot) returns (ReportResponse);

    rpc Track(TrackRequest) returns (TrackResponse);
    rpc TrackMatch(TrackMatchRequest) returns (TrackMatchResponse);
    rpc Trace(TraceRequest) returns (TraceResponse);

    rpc Ctrl_init(InitRequest) returns (InitResponse);
    rpc Ctrl_ping(PingRequest) returns (PongResponse);
    rpc Ctrl_clear(ClearRequest) returns (ClearResponse);

    rpc Gossip(GossipMessage) returns (GossipResponse);
}